"""
 An HTML page specialized for previewing GeoTracks.
"""

__author__ = "Nicolas Zwahlen"
__copyright__ = "Copyright 2024 N. Zwahlen"
__version__ = "1.0.0"

import logging
import time
from HtmlPage import *
from GeoTracker import GeoTrack
from PhotoInfo import *

class GeoTrackHtmlPage(HtmlPage):
    log = logging.getLogger('GeoTrackHtmlPage')

    def __init__(self, sTitle: str):
        """Constructor with title."""
        super().__init__(sTitle, 'http://www.tf79.ch/nature/style.css')
        sTime = time.strftime('%Y.%m.%d %H:%M:%S', time.localtime(time.time()))
        self.head.addTag(HtmlComment('Generated by pynorpa.py on ' + sTime))
        self.head.addTag(MetaHtmlTag('author', 'Nicolas Zwahlen'))
        self.includeScript('http://www.tf79.ch/nature/js/OpenLayers-v5.3.0.js')
        self.includeScript('http://www.tf79.ch/nature/js/panorpa-maps.js')
        self.addCssLink('http://www.tf79.ch/nature/css/OpenLayers-v5.3.0.css')

    def build(self, track: GeoTrack, photos):
        """Build page content from the specified GeoTrack."""
        self.log.info('Building preview of %s with %d photos', track.name, len(photos))
        self.addHeading(1, f'Preview of GeoTrack {track.name}')
        divPopup = DivHtmlTag('ol-popup')
        divMap = DivHtmlTag('ol-map', 'ol-map')
        divMap.addTag(divPopup)
        self.main.addTag(divMap)

        js  = '\n\tvar oVectorSource, oIconStyle;\n'
        js += f'\trenderMap({track.center.longitude:.6f}, {track.center.latitude:.6f}, 16);\n'

        photo: PhotoInfo
        for photo in photos:
            if photo.hasGPSData():
                js += f'\taddMapMarker({photo.lon:.6f}, {photo.lat:.6f}, "{photo.filename}");\n'
            else:
                self.log.info('No GPS data in %s', photo.filename)

        self.main.addTag(ScriptHtmlTag(js))